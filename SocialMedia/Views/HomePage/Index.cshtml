
@using SocialMedia.Models
@model dynamic

@{
    ViewBag.Title = "Index";
}




<h2>ViewBag.Title</h2>


<div class="container">
    <div class="row">
        <div class="col-4">
            <div class="card">
                <img class="card-img-top" src="~/Content/Images/UserProfile/@Model.User.Photo" alt="Card image cap">
                <div class="card-body">
                    <h5 class="card-title">@Model.User.UserName</h5>
                    <p class="card-text">@Model.User.Biography</p>
                    <a href="@Url.Action("Profile", "HomePage")" class="btn btn-primary">Profile Git</a>
                </div>
            </div>
            <a href="@Url.Action("AddContent", "HomePage")" class="btn btn-primary">İçerik Paylaş</a>
        </div>
        <div class="col-8">

            @{var Commentid = 1;}
            @foreach (ContentViewModel content in Model.ContentViewModel)
            {

                <div class="card mb-3">

                    <div class="card-body">
                        <h5 class="card-title">@content.Content.Title</h5>
                        <p class="card-text">@content.Content.ContentDescription</p>

                        <a id="likeCount-@content.Content.Id" href="#" class="btn btn-primary">Beğeniler: @content.Likes.Count</a>

                        @{
                            if (content.Likes.FindIndex(item => item.OwnerLikeId == @Model.User.Id) >= 0)
                            {
                                <button id="likeButton-@content.Content.Id" type="button" class="btn btn-danger" onclick="increaseLike(@content.Content.Id)">Beğenildi @{content.Likes.FindIndex(item => item.OwnerLikeId == @Model.User.Id);}</button>
                            }
                            else
                            {

                                <button id="likeButton-@content.Content.Id" type="button" class="btn btn-success" onclick="increaseLike(@content.Content.Id)">Beğen @{content.Likes.FindIndex(item => item.OwnerLikeId == @Model.User.Id);}</button>
                            }
                        }


                    <form id="commentForm-@content.Content.Id" onsubmit="addComment(event, @content.Content.Id)">
                        <input type="text" name="Comment" placeholder="Yorumunuz..." required />
                        <button type="submit" class="btn btn-primary">Yorum Yap</button>
                    </form>
                        
                        
                        
                        <div class="accordion" id="accordionPanelsStayOpenExample">
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="panelsStayOpen-headingOne">
                                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseOne" aria-expanded="true" aria-controls="panelsStayOpen-collapseOne">
                                        Yorumlar: @content.ContentComment.Count
                                    </button>
                                </h2>
                                <div id="panelsStayOpen-collapseOne" class="accordion-collapse collapse show" aria-labelledby="panelsStayOpen-headingOne">
                                    <div class="accordion-body">
                                        @foreach (ContentComment comment in content.ContentComment)
                                        {
                                            <p>
                                                <strong>@comment.Owner.UserName: </strong> 
                                                <span id="comment-@comment.Id">@comment.Comment</span>
                                                <input type="text" id="comment-update-@comment.Id" value="@comment.Comment" style="display: none" />  
                                                <span style="color:#808080">, @comment.CreateDateHumanReadable</span>
                                                @if(@comment.OwnerId==@Model.User.Id) {
                                                    <button class="btn btn-warning" id="comment-update-open-@comment.Id" onclick="openCommentUpdateMode(@comment.Id)">Düzenle</button>
                                                    <button class="btn btn-primary" style="display: none" id="comment-update-close-@comment.Id" onclick="updateCommentAndCloseUpdateMode(@comment.Id)">Güncelle</button>
                                                    <button class="btn btn-danger" onclick="deleteComment(@comment.Id)">Sil</button>;
                                                }
                                            </p>  
                                        }

                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        
                    </div>

                    </div>

            }
        </div>
    </div>
</div>

<script>
    function increaseLike(contentId) {
        // AJAX isteği göndererek beğeni sayısını artırın ve güncel değeri sayfada gösterin
        var likeButton = $('#likeButton-' + contentId);
        $.ajax({
            url: '@Url.Action("LikeContent", "HomePage")',
            type: 'POST',
            data: { ContentId: Number(contentId) },
            success: function (response) {
                // İsteğin başarılı olması durumunda sayfada beğeni sayısını güncelleyin
                if (likeButton.hasClass('btn-success')) {
                    likeButton.removeClass('btn-success');
                    likeButton.addClass('btn-danger');
                    likeButton.text('Beğenildi');
                } else {
                    likeButton.removeClass('btn-danger');
                    likeButton.addClass('btn-success');
                    likeButton.text('Beğen');
                }
                $('#likeCount-' + contentId).text("Beğeni: " +response);
            },
            error: function () {
                // İsteğin hata vermesi durumunda hata mesajı gösterebilirsiniz
                alert('Beğeni artırma işlemi sırasında bir hata oluştu.');
            }
        });
    }

    function addComment(event, contentId) {
        event.preventDefault(); // Form submit işlemini engellemek için

        var commentForm = $('#commentForm-' + contentId);
        var commentInput = commentForm.find('input[name=Comment]');

        $.ajax({
            url: '@Url.Action("AddComment", "HomePage")',
            type: 'POST',
            data: {
                ContentId: contentId,
                Comment: commentInput.val()
            },
            success: function (response) {
                // İsteğin başarılı olması durumunda sayfayı yeniden yükle
                location.reload();
            },
            error: function () {
                alert('Yorum ekleme işlemi sırasında bir hata oluştu.');
            }
        });
    }

    function deleteComment(commentId) {


        $.ajax({
            url: '@Url.Action("DeleteComment", "HomePage")',
            type: 'POST',
            data: {
                Id: commentId,
            },
            success: function (response) {
                // İsteğin başarılı olması durumunda sayfayı yeniden yükle
                location.reload();
            },
            error: function () {
                alert('Yorum silme işlemi sırasında bir hata oluştu.');
            }
        });
    }
    @*function addComment(contentId, commentId) {

        alert($('#contentComment-' + commentId).value())
        $.ajax({
            url: '@Url.Action("AddComment", "HomePage")',
            type: 'POST',
            data: {
                ContentId: Number(contentId),
                Comment: $('#contentComment-' + commentId).val(),
            },
            success: function (response) {

                @Commentid++
                    $('#contentComment-' + commentId).val("");
                    $('#commentCount').text("Yorum: " + response);
            },
            error: function () {

                alert('Beğeni artırma işlemi sırasında bir hata oluştu.');
            }
        });
    };*@
    function openCommentUpdateMode(commentId) {
        $("#comment-" + commentId).hide();
        $("#comment-update-open-" + commentId).hide();
        $("#comment-update-" + commentId).show();
        $("#comment-update-close-" + commentId).show();
    }

    function updateCommentAndCloseUpdateMode(commentId) {
        // get updated comment
        let updatedComment = $("#comment-update-" + commentId).val();
        if (updatedComment.trim().length === 0) {
            alert("Lütfen yorumu boş bırakmayın");
            return;
        }

        // update it on database
        $.ajax({
            url: '@Url.Action("UpdateComment", "HomePage")',
            type: 'POST',
            data: {
                Id: commentId,
                Comment: updatedComment
            },
            success: function (response) {
                $("#comment-" + commentId).show();
                $("#comment-update-open-" + commentId).show();
                $("#comment-update-" + commentId).hide();
                $("#comment-update-close-" + commentId).hide();

                // update comment on UI
                $("#comment-" + commentId).text(updatedComment);
            },
            error: function () {
                alert('Yorum güncelleme işlemi sırasında bir hata oluştu.');
            }
        });
    }

</script>

